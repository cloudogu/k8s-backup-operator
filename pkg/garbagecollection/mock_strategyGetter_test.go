// Code generated by mockery v2.42.1. DO NOT EDIT.

package garbagecollection

import (
	retention "github.com/cloudogu/k8s-backup-operator/pkg/retention"
	mock "github.com/stretchr/testify/mock"
)

// mockStrategyGetter is an autogenerated mock type for the strategyGetter type
type mockStrategyGetter struct {
	mock.Mock
}

type mockStrategyGetter_Expecter struct {
	mock *mock.Mock
}

func (_m *mockStrategyGetter) EXPECT() *mockStrategyGetter_Expecter {
	return &mockStrategyGetter_Expecter{mock: &_m.Mock}
}

// Get provides a mock function with given fields: name
func (_m *mockStrategyGetter) Get(name retention.StrategyId) (retention.Strategy, error) {
	ret := _m.Called(name)

	if len(ret) == 0 {
		panic("no return value specified for Get")
	}

	var r0 retention.Strategy
	var r1 error
	if rf, ok := ret.Get(0).(func(retention.StrategyId) (retention.Strategy, error)); ok {
		return rf(name)
	}
	if rf, ok := ret.Get(0).(func(retention.StrategyId) retention.Strategy); ok {
		r0 = rf(name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(retention.Strategy)
		}
	}

	if rf, ok := ret.Get(1).(func(retention.StrategyId) error); ok {
		r1 = rf(name)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// mockStrategyGetter_Get_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Get'
type mockStrategyGetter_Get_Call struct {
	*mock.Call
}

// Get is a helper method to define mock.On call
//   - name retention.StrategyId
func (_e *mockStrategyGetter_Expecter) Get(name interface{}) *mockStrategyGetter_Get_Call {
	return &mockStrategyGetter_Get_Call{Call: _e.mock.On("Get", name)}
}

func (_c *mockStrategyGetter_Get_Call) Run(run func(name retention.StrategyId)) *mockStrategyGetter_Get_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(retention.StrategyId))
	})
	return _c
}

func (_c *mockStrategyGetter_Get_Call) Return(_a0 retention.Strategy, _a1 error) *mockStrategyGetter_Get_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *mockStrategyGetter_Get_Call) RunAndReturn(run func(retention.StrategyId) (retention.Strategy, error)) *mockStrategyGetter_Get_Call {
	_c.Call.Return(run)
	return _c
}

// newMockStrategyGetter creates a new instance of mockStrategyGetter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockStrategyGetter(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockStrategyGetter {
	mock := &mockStrategyGetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
