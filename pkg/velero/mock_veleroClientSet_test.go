// Code generated by mockery v2.53.3. DO NOT EDIT.

package velero

import (
	mock "github.com/stretchr/testify/mock"
	discovery "k8s.io/client-go/discovery"

	v1 "github.com/vmware-tanzu/velero/pkg/generated/clientset/versioned/typed/velero/v1"

	v2alpha1 "github.com/vmware-tanzu/velero/pkg/generated/clientset/versioned/typed/velero/v2alpha1"
)

// mockVeleroClientSet is an autogenerated mock type for the veleroClientSet type
type mockVeleroClientSet struct {
	mock.Mock
}

type mockVeleroClientSet_Expecter struct {
	mock *mock.Mock
}

func (_m *mockVeleroClientSet) EXPECT() *mockVeleroClientSet_Expecter {
	return &mockVeleroClientSet_Expecter{mock: &_m.Mock}
}

// Discovery provides a mock function with no fields
func (_m *mockVeleroClientSet) Discovery() discovery.DiscoveryInterface {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Discovery")
	}

	var r0 discovery.DiscoveryInterface
	if rf, ok := ret.Get(0).(func() discovery.DiscoveryInterface); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(discovery.DiscoveryInterface)
		}
	}

	return r0
}

// mockVeleroClientSet_Discovery_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Discovery'
type mockVeleroClientSet_Discovery_Call struct {
	*mock.Call
}

// Discovery is a helper method to define mock.On call
func (_e *mockVeleroClientSet_Expecter) Discovery() *mockVeleroClientSet_Discovery_Call {
	return &mockVeleroClientSet_Discovery_Call{Call: _e.mock.On("Discovery")}
}

func (_c *mockVeleroClientSet_Discovery_Call) Run(run func()) *mockVeleroClientSet_Discovery_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *mockVeleroClientSet_Discovery_Call) Return(_a0 discovery.DiscoveryInterface) *mockVeleroClientSet_Discovery_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mockVeleroClientSet_Discovery_Call) RunAndReturn(run func() discovery.DiscoveryInterface) *mockVeleroClientSet_Discovery_Call {
	_c.Call.Return(run)
	return _c
}

// VeleroV1 provides a mock function with no fields
func (_m *mockVeleroClientSet) VeleroV1() v1.VeleroV1Interface {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for VeleroV1")
	}

	var r0 v1.VeleroV1Interface
	if rf, ok := ret.Get(0).(func() v1.VeleroV1Interface); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(v1.VeleroV1Interface)
		}
	}

	return r0
}

// mockVeleroClientSet_VeleroV1_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'VeleroV1'
type mockVeleroClientSet_VeleroV1_Call struct {
	*mock.Call
}

// VeleroV1 is a helper method to define mock.On call
func (_e *mockVeleroClientSet_Expecter) VeleroV1() *mockVeleroClientSet_VeleroV1_Call {
	return &mockVeleroClientSet_VeleroV1_Call{Call: _e.mock.On("VeleroV1")}
}

func (_c *mockVeleroClientSet_VeleroV1_Call) Run(run func()) *mockVeleroClientSet_VeleroV1_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *mockVeleroClientSet_VeleroV1_Call) Return(_a0 v1.VeleroV1Interface) *mockVeleroClientSet_VeleroV1_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mockVeleroClientSet_VeleroV1_Call) RunAndReturn(run func() v1.VeleroV1Interface) *mockVeleroClientSet_VeleroV1_Call {
	_c.Call.Return(run)
	return _c
}

// VeleroV2alpha1 provides a mock function with no fields
func (_m *mockVeleroClientSet) VeleroV2alpha1() v2alpha1.VeleroV2alpha1Interface {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for VeleroV2alpha1")
	}

	var r0 v2alpha1.VeleroV2alpha1Interface
	if rf, ok := ret.Get(0).(func() v2alpha1.VeleroV2alpha1Interface); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(v2alpha1.VeleroV2alpha1Interface)
		}
	}

	return r0
}

// mockVeleroClientSet_VeleroV2alpha1_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'VeleroV2alpha1'
type mockVeleroClientSet_VeleroV2alpha1_Call struct {
	*mock.Call
}

// VeleroV2alpha1 is a helper method to define mock.On call
func (_e *mockVeleroClientSet_Expecter) VeleroV2alpha1() *mockVeleroClientSet_VeleroV2alpha1_Call {
	return &mockVeleroClientSet_VeleroV2alpha1_Call{Call: _e.mock.On("VeleroV2alpha1")}
}

func (_c *mockVeleroClientSet_VeleroV2alpha1_Call) Run(run func()) *mockVeleroClientSet_VeleroV2alpha1_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *mockVeleroClientSet_VeleroV2alpha1_Call) Return(_a0 v2alpha1.VeleroV2alpha1Interface) *mockVeleroClientSet_VeleroV2alpha1_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mockVeleroClientSet_VeleroV2alpha1_Call) RunAndReturn(run func() v2alpha1.VeleroV2alpha1Interface) *mockVeleroClientSet_VeleroV2alpha1_Call {
	_c.Call.Return(run)
	return _c
}

// newMockVeleroClientSet creates a new instance of mockVeleroClientSet. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockVeleroClientSet(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockVeleroClientSet {
	mock := &mockVeleroClientSet{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
