// Code generated by mockery v2.20.0. DO NOT EDIT.

package velero

import (
	context "context"

	v1 "github.com/cloudogu/k8s-backup-operator/pkg/api/v1"
	mock "github.com/stretchr/testify/mock"
)

// mockRestoreManager is an autogenerated mock type for the restoreManager type
type mockRestoreManager struct {
	mock.Mock
}

type mockRestoreManager_Expecter struct {
	mock *mock.Mock
}

func (_m *mockRestoreManager) EXPECT() *mockRestoreManager_Expecter {
	return &mockRestoreManager_Expecter{mock: &_m.Mock}
}

// CreateRestore provides a mock function with given fields: ctx, restore
func (_m *mockRestoreManager) CreateRestore(ctx context.Context, restore *v1.Restore) error {
	ret := _m.Called(ctx, restore)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *v1.Restore) error); ok {
		r0 = rf(ctx, restore)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// mockRestoreManager_CreateRestore_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateRestore'
type mockRestoreManager_CreateRestore_Call struct {
	*mock.Call
}

// CreateRestore is a helper method to define mock.On call
//   - ctx context.Context
//   - restore *v1.Restore
func (_e *mockRestoreManager_Expecter) CreateRestore(ctx interface{}, restore interface{}) *mockRestoreManager_CreateRestore_Call {
	return &mockRestoreManager_CreateRestore_Call{Call: _e.mock.On("CreateRestore", ctx, restore)}
}

func (_c *mockRestoreManager_CreateRestore_Call) Run(run func(ctx context.Context, restore *v1.Restore)) *mockRestoreManager_CreateRestore_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*v1.Restore))
	})
	return _c
}

func (_c *mockRestoreManager_CreateRestore_Call) Return(_a0 error) *mockRestoreManager_CreateRestore_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mockRestoreManager_CreateRestore_Call) RunAndReturn(run func(context.Context, *v1.Restore) error) *mockRestoreManager_CreateRestore_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTnewMockRestoreManager interface {
	mock.TestingT
	Cleanup(func())
}

// newMockRestoreManager creates a new instance of mockRestoreManager. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newMockRestoreManager(t mockConstructorTestingTnewMockRestoreManager) *mockRestoreManager {
	mock := &mockRestoreManager{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
